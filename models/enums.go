/*
Package batester

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// SuiteCodeEnum is a int enum.
// A integer based enum representing a Suite in a game of cards
type SuiteCodeEnum int

// MarshalJSON implements the json.Marshaler interface for SuiteCodeEnum.
// It customizes the JSON marshaling process for SuiteCodeEnum objects.
func (e SuiteCodeEnum) MarshalJSON() (
    []byte,
    error) {
    if e.isValid() {
        return []byte(fmt.Sprintf("%v", e)), nil
    }
    return nil, errors.New("the provided enum value is not allowed for SuiteCodeEnum")
}

// UnmarshalJSON implements the json.Unmarshaler interface for SuiteCodeEnum.
// It customizes the JSON unmarshaling process for SuiteCodeEnum objects.
func (e *SuiteCodeEnum) UnmarshalJSON(input []byte) error {
    var enumValue int
    err := json.Unmarshal(input, &enumValue)
    if err != nil {
        return err
    }
    *e = SuiteCodeEnum(enumValue)
    if !e.isValid() {
        return errors.New("the value " + string(input) + " cannot be unmarshalled to SuiteCodeEnum")
    }
    return nil
}

// Checks whether the value is actually a member of SuiteCodeEnum.
func (e SuiteCodeEnum) isValid() bool {
    switch e {
    case SuiteCodeEnum_HEARTS,
        SuiteCodeEnum_SPADES,
        SuiteCodeEnum_CLUBS,
        SuiteCodeEnum_DIAMONDS:
        return true
    }
    return false
}

const (
    SuiteCodeEnum_HEARTS   SuiteCodeEnum = 1
    SuiteCodeEnum_SPADES   SuiteCodeEnum = 2
    SuiteCodeEnum_CLUBS    SuiteCodeEnum = 3
    SuiteCodeEnum_DIAMONDS SuiteCodeEnum = 4
)
